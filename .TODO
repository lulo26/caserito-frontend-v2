* save product images
* edit and delete users
* fix sales
* put actual statistics on home page

### POSIBLE SOLUCION ###

*** VENTAS FORM ***

export default function VentasForm({ inputFields, setInputFields, total, setTotal, recibido, setRecibido, cambio, setCambio, productoList }) {

  const handleFormChange = (index, e)=>{
    let data = [...inputFields];
    data[index][e.target.name] = e.target.value;
    setInputFields(data);
    getTotal(data);
  };

  const addFields = ()=>{
    setInputFields([...inputFields, { producto_id: '', cantidad: '', totalProducto: '' }]);
  };

  const removeFields = (index)=>{
    let data = [...inputFields];
    data.splice(index, 1);
    setInputFields(data);
  };

  const getTotal = (fields) => {
    let totalSum = 0;
    const updatedFields = fields.map((field, i) => {
      const selectedProduct = productoList.find(p => p.id === parseInt(field.producto_id));
      const cantidad = parseInt(field.cantidad);
      if (selectedProduct && !isNaN(cantidad)) {
        const totalProducto = selectedProduct.precio * cantidad;
        totalSum += totalProducto;
        return { ...field, totalProducto };
      }
      return { ...field, totalProducto: '' };
    });
    setInputFields(updatedFields);
    setTotal(totalSum);
  };

  React.useEffect(()=>{
    const cambioCalc = recibido - total;
    setCambio(cambioCalc > 0 ? cambioCalc : 0);
  }, [recibido, total]);

  return (
    <>
      {inputFields.map((input, index) => (
        <Stack key={index} direction="row" spacing={1} mb={1} mt={2}>
          <Select
            name="producto_id"
            value={input.producto_id}
            onChange={e => handleFormChange(index, e)}
            displayEmpty
            sx={{ width: '90%' }}
          >
            <MenuItem disabled value="">
              <em>Seleccione el producto</em>
            </MenuItem>
            {productoList.map(producto => (
              <MenuItem key={producto.id} value={producto.id}>
                {producto.nombre} - ${producto.precio}
              </MenuItem>
            ))}
          </Select>
          <TextField
            name="cantidad"
            label="Cantidad"
            type='number'
            value={input.cantidad}
            onChange={e => handleFormChange(index, e)}
            required
          />
          <TextField
            name="totalProducto"
            label="Total"
            type="text"
            value={input.totalProducto}
            disabled
          />
          <IconButton onClick={() => removeFields(index)} aria-label="delete">
            <DeleteIcon />
          </IconButton>
        </Stack>
      ))}

      <Button onClick={addFields} variant="outlined" sx={{ mb: 3, borderRadius: 3, mt: 1 }}>
        Agregar productos
      </Button>

      <TextField
        label="Recibido"
        name='recibido'
        type="number"
        value={recibido}
        onChange={e => setRecibido(parseFloat(e.target.value))}
        required
        fullWidth
        sx={{ mb: 2 }}
      />

      <TextField
        label="Total"
        name='total'
        type="text"
        disabled
        value={total}
        fullWidth
        sx={{ mb: 2 }}
      />

      <TextField
        label="Cambio"
        name='cambio'
        type="text"
        disabled
        value={cambio}
        fullWidth
        sx={{ mb: 2 }}
      />
    </>
  );
}

*** VENTAS MODAL ***

export default function VentasModal() {
  const navigate = useNavigate();
  const [open, setOpen] = useState(false);
  const [inputFields, setInputFields] = useState([{ producto_id: '', cantidad: '', totalProducto: '' }]);
  const [productoList, setProductoList] = useState([]);
  const [total, setTotal] = useState(0);
  const [recibido, setRecibido] = useState(0);
  const [cambio, setCambio] = useState(0);
  const [responseMessage, setResponseMessage] = useState("");

  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);

  const fetchProductos = async () => {
    try {
      const res = await axios.get(`${baseURL}/producto`);
      setProductoList(res.data.data);
    } catch (err) {
      console.error("Error fetching productos:", err);
    }
  };

  React.useEffect(() => {
    fetchProductos();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      // First, create the sale
      const ventaRes = await axios.post(`${baseURL}/venta`, {
        total,
        recibido
      });

      const venta_id = ventaRes.data.id; // Make sure your API returns this

      // Then, add each item with the venta_id
      for (const item of inputFields) {
        const producto = productoList.find(p => p.id === parseInt(item.producto_id));
        if (!producto) continue;

        await axios.post(`${baseURL}/items`, {
          venta_id,
          producto_id: producto.id,
          precio: producto.precio,
          cantidad: item.cantidad,
          total: item.totalProducto
        });
      }

      setResponseMessage(<Alert severity="success">Venta y productos agregados correctamente.</Alert>);
      navigate(0);
    } catch (error) {
      console.error("Error saving venta or items:", error);
      setResponseMessage(<Alert severity="error">Hubo un error al guardar la venta.</Alert>);
    }
  };

  return (
    <>
      <Button onClick={handleOpen} variant="contained" sx={{ borderRadius: '8px' }}>
        Agregar
      </Button>
      <Dialog open={open} onClose={handleClose}>
        <DialogTitle>Realizar venta</DialogTitle>
        <DialogContent>
          <form onSubmit={handleSubmit}>
            <VentasForm
              inputFields={inputFields}
              setInputFields={setInputFields}
              total={total}
              setTotal={setTotal}
              recibido={recibido}
              setRecibido={setRecibido}
              cambio={cambio}
              setCambio={setCambio}
              productoList={productoList}
            />
            <Button variant="contained" type="submit" sx={{ borderRadius: '8px' }}>
              Agregar
            </Button>
          </form>
          {responseMessage && <Box mt={2}>{responseMessage}</Box>}
        </DialogContent>
      </Dialog>
    </>
  );
}
